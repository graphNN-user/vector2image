# 1: input: vector (size: 625) 
# 2: correlation matrix is computed
# 3: clusteing using correlation as distance
# 4: get the order of features from cluster
# 5: convert to 25 * 25 matrix
# 6: unlist to a vector form

# input vector ( 625 features (column) * nrow is the nmuber of observes
mydata <- read.csv("rm_missing_correlated.csv", header=T, row.names=1) 

# Pairwise correlation between columes 
cols.cor <- cor(mydata, use = "pairwise.complete.obs", method = "pearson")

## column-wise clustering using correlation as distance
hclust.col <- hclust(as.dist(abs(1-cols.cor)))

# visualization of the cluster
library(ggplot2)
library("ggdendro")
ggdendrogram(hclust.col, rotate = TRUE)

genesets <- colnames(mydata)                   # original order
cluster_geneset_order <- genesets[hclust.col$order]  #

split_vector <- split(cluster_geneset_order, rep(1:25, each = 25 ))
matrix_list  <- lapply(split_vector, function(x) matrix(x, nrow=5, ncol=5))
m1 <- do.call(cbind, matrix_list[1:5]   )
m2 <- do.call(cbind, matrix_list[6:10]  )
m3 <- do.call(cbind, matrix_list[11:15] )
m4 <- do.call(cbind, matrix_list[16:20] )
m5 <- do.call(cbind, matrix_list[21:25] )
m  <- rbind(m1,m2,m3,m4,m5)

combined_list <- lapply(1:nrow(m), function(i) m[i,, drop=F] )
final_list    <- unlist(combined_list)
write.csv(final_list, file="final_list.csv", row.names=F)
write.csv(final_list, file="final_list2.csv", row.names=T)

mydata2 <- mydata[,final_list]
write.csv(mydata2, file="ERR3379693_healthy_matirx.csv")

apop <- read.csv("ERR3379692_apoptotic_kegg2_rm_missing_correlated.csv", header=T, row.names=1)  
apop2 <- apop[, final_list]
write.csv(apop2, file="ERR3379692_apoptotic_matirx.csv")

proapop <- read.csv("ERR3379695_proapoptotic_kegg2_rm_missing_correlated.csv", header=T, row.names=1) 
proapop2 <- proapop[, final_list]
write.csv(proapop2, file="ERR3379695_proapoptotic_matirx.csv")
